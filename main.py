from config import device
from translator import Translator
from audio_generator import AudioGenerator
import threading
import queue
import warnings
warnings.filterwarnings("ignore", category=UserWarning, module="transformers")


def main():
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    try:
        translator = Translator()
        audio_generator = AudioGenerator()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞
    translation_enabled = True
    use_streaming = True  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–∏–º–∏–Ω–≥ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏

    print(f"–ü–µ—Ä–µ–≤–æ–¥: {'–≤–∫–ª—é—á–µ–Ω' if translation_enabled else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
    print(f"–°—Ç—Ä–∏–º–∏–Ω–≥: {'–≤–∫–ª—é—á–µ–Ω' if use_streaming else '–æ—Ç–∫–ª—é—á–µ–Ω'}")

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ü–∏–∫–ª
    print("\n–ö–æ–º–∞–Ω–¥—ã:")
    print("- –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("- '–ø–µ—Ä–µ–≤–æ–¥ –≤–∫–ª/–≤—ã–∫–ª' - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–º")
    print("- '—Å—Ç—Ä–∏–º–∏–Ω–≥ –≤–∫–ª/–≤—ã–∫–ª' - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º")
    print("- '—Å—Ç–∞—Ç—É—Å' - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("- '–≤—ã—Ö–æ–¥' - –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É")

    # –û—á–µ—Ä–µ–¥—å –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    audio_queue = queue.Queue()

    def audio_worker():
        """–í–æ—Ä–∫–µ—Ä –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ"""
        while True:
            item = audio_queue.get()
            if item is None:
                break
            text, use_stream = item
            if use_stream:
                audio_generator.generate_and_play_stream(text)
            else:
                audio_generator.generate_and_play_file(text)
            audio_queue.task_done()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    audio_thread = threading.Thread(target=audio_worker, daemon=True)
    audio_thread.start()

    while True:
        text = input("\n–í–≤–æ–¥: ").strip()

        # –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if text.lower() in ["–≤—ã—Ö–æ–¥", "exit", "quit"]:
            audio_queue.put(None)  # –°–∏–≥–Ω–∞–ª –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ—Ä–∫–µ—Ä–∞
            print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            break
        elif text.lower() == "–ø–µ—Ä–µ–≤–æ–¥ –≤–∫–ª":
            translation_enabled = True
            print("–ü–µ—Ä–µ–≤–æ–¥ –≤–∫–ª—é—á–µ–Ω.")
            continue
        elif text.lower() == "–ø–µ—Ä–µ–≤–æ–¥ –≤—ã–∫–ª":
            translation_enabled = False
            print("–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–∫–ª—é—á–µ–Ω.")
            continue
        elif text.lower() == "—Å—Ç—Ä–∏–º–∏–Ω–≥ –≤–∫–ª":
            use_streaming = True
            print("–°—Ç—Ä–∏–º–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω.")
            continue
        elif text.lower() == "—Å—Ç—Ä–∏–º–∏–Ω–≥ –≤—ã–∫–ª":
            use_streaming = False
            print("–°—Ç—Ä–∏–º–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω.")
            continue
        elif text.lower() == "—Å—Ç–∞—Ç—É—Å":
            print(f"–ü–µ—Ä–µ–≤–æ–¥: {'–≤–∫–ª—é—á–µ–Ω' if translation_enabled else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
            print(f"–°—Ç—Ä–∏–º–∏–Ω–≥: {'–≤–∫–ª—é—á–µ–Ω' if use_streaming else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
            continue
        elif not text:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É.")
            continue

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
        try:
            if translation_enabled:
                # –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
                translated_text = translator.translate(text)
                print("–ü–µ—Ä–µ–≤–æ–¥:", translated_text)
                final_text = translated_text
            else:
                print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:", text)
                final_text = text

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            audio_queue.put((final_text, use_streaming))

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
            continue


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n —Å—Ç—É–ø–∞–π! üëã")
